{
	"добавить информацию о скиллах которые будут изучены на курсе в формате JSON" : "Во-первых, документы в формате JSON состоят из объектов. Объекты - это неупорядоченное множество
пар “имя - значения”. Объект обычно заключается в фигурные скобки и внутри него содержатся, как я уже сказал,
пары “имя - значения”. Имя “name”, значение “Петр”. Между собой эти пары разделяются запятой, а имя и само
значение между собой разделяются “:”. Просто запоминаем, что есть фигурные скобки, что наше имя и значение
заключены в кавычки, между собой имя и значение разделяется “:”, а пары имя и значения разделяются запятой.
Имя - это всегда строка, т.е. тип данных для него - это строка, а само значение, как здесь у нас, например, “Петр”,
может быть как строкой в двойных кавычках, так и числом, каким-то логическим значением булевым (true или
falls), массивом или значением “NULL”. О массивах мы с вами поговорим чуть дальше, а значение null - это
значение 0. Если мы говорим о таком типе данных, как строка, то это упорядоченное множество из нуля или
более символов юникода, заплетённые в двойные кавычки
Если мы говорим о простых числах, то их не нужно заключать кавычки. Как раз на примере индекса можно
заметить разницу, если у нас используется в значении число, то кавычки не записываем, и тогда наша система
воспринимает эти данные как числовые. Как только мы с вами используем кавычки для записи нашего числа, то
автоматически этот тип данных превращается в строку и воспринимается системой как текст. Аналогично с
булевскими значениями true, falls.
И последний тип данных - это массивы. Это множество наших объектов. Как мы с вами помним, объекты
- это некоторое количество пар “имя и значения”. Как только у нас используется несколько таких вот объектов,
то тогда мы заключаем их в массивы. Массив заключается в квадратные скобки, а значения внутри этого массива
отделяются запятыми.Очень часто на собеседованиях спрашивают в чем разница между REST и SOAP веб-сервисами. Давайте
перечислим эти различия. REST - поддерживает различные форматы. Самый распространенный JSON, но также
можно использовать XML и текстовые форматы. Но SOAP - только XML. REST работает только по протоколам
http и https. SOAP - с различными протоколами. SOAP на основе чтения не может быть помещен в кэш. Rest
можно кэшировать. REST - это архитектурный стиль без строгих правил. SOAP - протокол, который сильно
ограничен правилами.
Что необходимо выбирать на проекте, REST или SOAP? Простота против стандарта. REST - у вас будет
скорость, расширяемость, поддержка многих форматов. SOAP - у вас будет больше возможностей по
безопасности, а также больше возможности провести тестирование качественно, так как сразу в SOAP у вас
будут WSDL, где будут прописаны образцы ваших запросов. Т.е. не нужно будет лишний раз обращаться к
разработчику, просить его, чтобы он предоставил вам информацию, какие-то примеры запросов. Сразу можно
брать и тестировать. SOAP  более ресурсоемкий, занимает больше места, он медленнее. Разработка на SOAP
дольше"}



